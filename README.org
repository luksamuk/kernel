#+TITLE: kernel
#+AUTHOR: Lucas Vieira
#+EMAIL: lucasvieira@protonmail.com

* Introduction

This is a toy bare bones kernel written in pure C. Works on x86
platforms.

* Building

You will need:

- ~nasm~
- ~gcc~
- ~ld~

Just type ~make~ and see the magic happen.

* Running

The ~kernel.bin~ binary runs fine under ~qemu~. Use the ~run.sh~ script to
try it out.

* To-do

You can check out my [[https://trello.com/b/8uHdxFY6/bare-bones-kernel][Trello board]] for this project. I took the
opportunity to start messing with it, so there goes.

* Bibliography

- [[https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel][Kernel 101 – Let’s write a Kernel]]
- [[https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard][Kernel 201 – Let’s write a Kernel with keyboard and screen support]]
- [[https://wiki.osdev.org/][OSDev Wiki]]
  - [[https://wiki.osdev.org/Detecting_Memory_(x86)#Memory_Map_Via_GRUB][Memory Map via GRUB]]
- COMER, Douglas. /Operating system design: The Xinu approach/. 2nd
  ed. 2005.
- [[https://www.gnu.org/software/grub/manual/multiboot/][Multiboot Manual]]
  - [[https://www.gnu.org/software/grub/manual/multiboot/html_node/Boot-information-format.html#Boot%20information%20format][Boot information format]]

* License

This project is distributed under the MIT License. See LICENSE for
details.
